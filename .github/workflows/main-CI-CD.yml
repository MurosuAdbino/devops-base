name: RUNNER M101 CI/CD with Docker on DigitalOcean Registry

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: registry.digitalocean.com/imgreg-m101/webfe-simple:latest
  CONTAINER_NAME: webfe-simple
  PORT: 4000

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build Docker image
      run: |
        docker build -t $DOCKER_IMAGE .

    - name: Docker login to DigitalOcean Registry
      run: |
        echo "${{ secrets.REGISTRYDO_TOKEN }}" | docker login registry.digitalocean.com -u "${{ secrets.REGISTRYDO_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push $DOCKER_IMAGE

    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODSM101_HOST }}
        username: ${{ secrets.PRODSM101_USERNAME }}
        key: ${{ secrets.PRODSM101_PRIVATE_KEY }}
        port: 22
        script: |
          DOCKER_IMAGE=${{ env.DOCKER_IMAGE }}
          CONTAINER_NAME=${{ env.CONTAINER_NAME }}
          PORT=${{ env.PORT }}

          echo "DOCKER_IMAGE: $DOCKER_IMAGE"
          echo "CONTAINER_NAME: $CONTAINER_NAME"
          echo "PORT: $PORT"

          if [ -z "$DOCKER_IMAGE" ]; then echo "DOCKER_IMAGE is empty!"; exit 1; fi
          if [ -z "$CONTAINER_NAME" ]; then echo "CONTAINER_NAME is empty!"; exit 1; fi
          if [ -z "$PORT" ]; then echo "PORT is empty!"; exit 1; fi
    
          docker pull $DOCKER_IMAGE
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          docker run -d --name $CONTAINER_NAME -p $PORT:$PORT --restart always $DOCKER_IMAGE
